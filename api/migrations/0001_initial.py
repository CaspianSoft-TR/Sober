# Generated by Django 2.1.5 on 2019-05-30 15:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('longitude', models.CharField(default=0, max_length=30)),
                ('latitude', models.CharField(default=0, max_length=30)),
                ('is_pickup_loc', models.BooleanField(default=False)),
                ('is_arrival_loc', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BookDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('status', models.IntegerField(choices=[(0, 'REJECTED'), (1, 'REJECTED')], default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('status', models.IntegerField(choices=[(0, 'NEW'), (1, 'ACCEPTED'), (2, 'REJECTED'), (10, 'DRIVER_RECOMENDED'), (100, 'CANCEL'), (200, 'COMPLETED')], default=0)),
                ('payment_type', models.IntegerField(choices=[(0, 'CASH'), (1, 'CREDIT CARD')], default=0)),
                ('driver_rate', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('total_distance', models.IntegerField(default=0)),
                ('total_distance_type', models.IntegerField(choices=[(0, 'KM'), (1, 'MILES')], default=0)),
                ('price', models.IntegerField(default=0)),
                ('price_currency', models.IntegerField(choices=[(1, 'AZN'), (2, 'TL')], default=1)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_id', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driver_id', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('brand', models.CharField(max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('modelyear', models.IntegerField()),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_info', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=50)),
                ('national_id', models.ImageField(blank=True, upload_to='sober/static/national_id')),
                ('driver_license', models.ImageField(blank=True, upload_to='sober/static/driving_license')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DriverHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booked_time', models.DateTimeField(auto_now_add=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Customer')),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Driver')),
            ],
        ),
        migrations.CreateModel(
            name='DriverLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('longitude', models.CharField(max_length=30)),
                ('latitude', models.CharField(max_length=30)),
                ('location_name', models.CharField(max_length=20)),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Driver')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.CharField(max_length=200)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Customer')),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Driver')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Customer')),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Driver')),
            ],
        ),
        migrations.CreateModel(
            name='TravelHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booked_time', models.DateTimeField(auto_now_add=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Customer')),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Driver')),
            ],
        ),
        migrations.CreateModel(
            name='UserCar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('number_plate', models.CharField(max_length=20)),
                ('color', models.CharField(default='', max_length=100)),
                ('gear_type', models.IntegerField(choices=[(0, 'UNKNOWN'), (1, 'AUTO'), (2, 'MANUAL')], default=2)),
                ('car', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='api.Car')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_driver', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=True)),
                ('phone', models.CharField(max_length=50)),
                ('longitude', models.CharField(default=0, max_length=30)),
                ('latitude', models.CharField(default=0, max_length=30)),
                ('firebase_token', models.CharField(default='', max_length=255)),
                ('push_token', models.CharField(default='', max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bookdriver',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookdriver_book_id', to='api.Booking'),
        ),
        migrations.AddField(
            model_name='bookdriver',
            name='driver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookdriver_user_id', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='address',
            name='booking',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_id', to='api.Booking'),
        ),
        migrations.AddField(
            model_name='address',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to=settings.AUTH_USER_MODEL),
        )
    ]
